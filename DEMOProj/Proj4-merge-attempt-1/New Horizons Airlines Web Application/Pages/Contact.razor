@inherits MainLayout
@page "/contact"

@using New_Horizons_Airlines_Web_Application.Data;
@using Microsoft.Extensions.Configuration
@using DataLibrary
@using System.Text.Json
@using System.IO
@inject IDataAccess _data
@inject IConfiguration _config
@inject IJSRuntime jsruntime

<style>
    .slider {
        width: 100%;
        height: auto;
        border-radius: 10px;
        overflow: hidden;
    }

    .slides {
        width: 5000%;
        height: auto;
        display: flex;
    }

        .slides input {
            display: none;
        }

    .slide {
        width: 2%;
        transition: 3.5s;
    }

        .slide img {
            width: 100%;
            height: auto;
        }


    #radio1:checked ~ .first {
        margin-left: 0;
    }

    #radio2:checked ~ .first {
        margin-left: -2%;
    }

    #radio3:checked ~ .first {
        margin-left: -4%;
    }

    #radio4:checked ~ .first {
        margin-left: -6%;
    }

    #radio5:checked ~ .first {
        margin-left: -8%;
    }

    #radio6:checked ~ .first {
        margin-left: -10%;
    }

    #radio7:checked ~ .first {
        margin-left: -12%;
    }

    #radio8:checked ~ .first {
        margin-left: -14%;
    }

    #radio9:checked ~ .first {
        margin-left: -16%;
    }

    #radio10:checked ~ .first {
        margin-left: -18%;
    }

    #radio11:checked ~ .first {
        margin-left: -20%;
    }

    #radio12:checked ~ .first {
        margin-left: -22%;
    }

    #radio13:checked ~ .first {
        margin-left: -24%;
    }

    #radio14:checked ~ .first {
        margin-left: -26%;
    }

    #radio15:checked ~ .first {
        margin-left: -28%;
    }

    #radio16:checked ~ .first {
        margin-left: -30%;
    }

    #radio17:checked ~ .first {
        margin-left: -32%;
    }

    #radio18:checked ~ .first {
        margin-left: -34%;
    }

    #radio19:checked ~ .first {
        margin-left: -36%;
    }


    #radio20:checked ~ .first {
        margin-left: -38%;
    }

    #radio21:checked ~ .first {
        margin-left: -40%;
    }

    #radio22:checked ~ .first {
        margin-left: -42%;
    }

    #radio23:checked ~ .first {
        margin-left: -44%;
    }

    #radio24:checked ~ .first {
        margin-left: -46%;
    }

    #radio25:checked ~ .first {
        margin-left: -48%;
    }

    #radio26:checked ~ .first {
        margin-left: -50%;
    }

    #radio27:checked ~ .first {
        margin-left: -52%;
    }

    #radio28:checked ~ .first {
        margin-left: -54%;
    }

    #radio29:checked ~ .first {
        margin-left: -56%;
    }
</style>
<div class="row"> @*style="background-color:rgba(255, 255, 255, 0.45); border-radius: 10px;">*@
    <div class="col-xl-5 col-lg-6 col-md-7" style="margin:10px; background-color:rgba(255, 255, 255, 0.65); border-radius: 10px;">
        <section>
            <div class="form-group">

                <p style="font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; text-align:justify">
                    <b>Our Mission:</b><br />
                    To deliver the best value in the sky and be the most successful airline on Earth!
                    We have 29 locations accross the United States to ensure the best service to our customers.
                    We constantly aspire to improve as a company and so we ask you for your feedback on the
                    service you've received from our airlines and our fellow airport partners accross the U.S.
                </p>
                <text style="font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; text-align:justify; margin-bottom: 1px;">
                    <b>Our Reach:</b>
                </text>
                @if (airports != null)
                {
                    <div class="slider" style="max-width:100%; max-height:100%; padding-top:10px;">

                        <div class="slides">
                            <!--radio buttons start-->
                            @for (int i = 1; i <= 29; ++i)
                            {
                                <input type="radio" name="radio-btn" id=@string.Concat("radio", @i.ToString())>
                            }
                            <!--radio buttons end-->
                            <!--slide images start-->
                            @for (int i = 0; i < 29; ++i)
                            {
                                @if (i == 0)
                                {
                                    <div class="slide first">
                                        <img src=@string.Concat("/images/airport_cities/", airports[i].city_image_name) alt=@airports[i].city_image_name.ToString()>
                                    </div>
                                }
                                else
                                {
                                    <div class="slide">
                                        <img src=@string.Concat("/images/airport_cities/", airports[i].city_image_name) alt=@airports[i].city_image_name.ToString()>
                                    </div>
                                }
                            }
                        </div>
                        @*<div>
                            @if (currentImgIndex != 1)
                            {
                                @airports[currentImgIndex - 1].airport_name
                            }
                        </div>*@

                    </div>
                    <ul style="font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif">
                        <li id="airport_name" style="margin-bottom:8px; margin-top:8px;">
                            @airports[0].airport_name
                        </li>
                        <li id="airport_phone" style="margin-bottom:8px">
                            Phone:  @airports[0].phone
                        </li>
                        <li id="airport_addr" style="margin-bottom:8px">
                            Address:  @airports[0].address
                        </li>
                        <li id="airport_city" style="margin-bottom:8px">
                            City:  @airports[0].city
                        </li>
                        <li id="airport_state" style="margin-bottom:8px">
                            State:  @airports[0].state
                        </li>
                        <li style="margin-bottom:8px">
                            Website: <a id="airport_site" href="@airports[0].website">@airports[0].website</a>
                        </li>
                    </ul>
                }
            </div>
        </section>
    </div>
    <div class="col-xl-6 col-lg-5 col-md-4" style="margin-top:10px; margin-bottom:10px; background-color: rgba(255, 255, 255, 0.65); border-radius: 10px;">
        <section>
            <h3 style="text-align:center">Customer Feedback</h3>
            <br />
            <h4>Email:</h4>
            <input class="form-control" id="feedEmail" @bind="feedback.Email"/>
            <br />
            <h4>First Name:</h4>
            <input class="form-control" id="feedFirstName" @bind="feedback.first_name" />
            <br />
            <h4>Last Name:</h4>
            <input class="form-control" id="feedLastName" @bind="feedback.last_name" />
            <br />
            <h4>Message:</h4>
            <textarea class="form-control" id="feedMessage" contenteditable="true" wrap="hard" style="max-height:200px; min-height:200px" @bind="feedback.message"></textarea>
            <br />
            @*<p id="changeContactText">@currentImgIndex</p>*@
            <button class="btn btn-info btn-block" @onclick="ValidateData" id="feedBtn">Submit Feedback</button>
            
        </section>
    </div>
</div>
<p id="serializedData" hidden>@tempData</p>
@code {
    private string tempData;
    //private int currentImgIndex = 1;
    private List<AirportModel> airports = null;
    protected override async Task OnInitializedAsync()
    {
        string sql = "select airport_id, airport_name, address, website, phone, city, state, latitude, longitude, city_image_name from airports";
        airports = await _data.LoadData<AirportModel, dynamic>(sql, new { }, _config.GetConnectionString("DefaultConnection"));
        if (airports != null)
        {
            tempData = JsonSerializer.Serialize(airports);
        }
    }
    private CustomerFeedbackModel feedback = new CustomerFeedbackModel() { Email="", first_name="", last_name="", message=""};
    private async Task ValidateData()
    {
        var isValid = await jsruntime.InvokeAsync<bool>("validate", feedback.Email, feedback.first_name, feedback.last_name, feedback.message);
        if (isValid)
        {
            await InsertData();
        }
    }
    private async Task InsertData()
    {
        string sql = "insert into new_horizons_db.customer_feedback (Email, first_name, last_name, message) values (@email, @firstName, @lastName, @message);";
        await _data.SaveData(sql, new { email = feedback.Email, firstName = feedback.first_name, lastName = feedback.last_name, message = feedback.message }, _config.GetConnectionString("DefaultConnection"));
    }
}